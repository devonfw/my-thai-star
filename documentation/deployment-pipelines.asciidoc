:toc: macro
toc::[]

= Deployment Pipelines

As PL does not support deployments, we have created separate pipelines for this purpose. Those pipelines are: *MyThaiStar_REVERSE-PROXY_DEPLOY*, *MyThaiStar_FRONTEND_DEPLOY* and *MyThaiStar_SERVER_DEPLOY*.

The application will be deployed using docker on a remote machine. The architecture is as follows:

image::images/ci/deployment/deployment_arch.png[,link=images/ci/deployment/deployment_arch.png]

The parts to be deployed are: an NGINX reverse proxy, the java application and the angular application.

== MyThaiStar_SERVER_DEPLOY Pipeline

Deploys on the server the Java part of My Thai Star.

=== Parameters

- *registryUrl*: The url to the docker registry where the image is stored.
- *registryCredentialsId*: Credentials to publish/download images from registry.
- *dockerNetwork*: Network of your My Thai Star application. You can deploy several versions of MTS in the same server by changing the dockerNetwork.
- *VERSION*: The version that you can to deploy.

=== Pipeline steps

- *Create docker network*: Create the docker network with the name provided as parameter.
- *Deploy new image*: Deploy a new java container. If it already exists, first it delete the previous one.

== MyThaiStar_FRONTEND_DEPLOY

Deploys on the server the Angular part of My Thai Star

=== Parameters

- *registryUrl*: The url to the docker registry where the image is stored.
- *registryCredentialsId*: Credentials to publish/download images from registry.
- *dockerNetwork*: Network of your My Thai Star application. You can deploy several versions of MTS in the same server by changing the dockerNetwork.
- *VERSION*: The version that you can to deploy.

=== Pipeline steps

- *Create docker network*: Create the docker network with the name provided as parameter.
- *Deploy new image*: Deploy a new angular container. If it already exists, first it delete the previous one.

== MyThaiStar_REVERSE-PROXY_DEPLOY Pipeline

NOTE: As reverse proxy connects to the Java and Angular application, both must be deployed before you execute this pipeline.

The MyThaiStar_REVERSE-PROXY_DEPLOY pipeline will deploy the My Thai Star reverse proxy into a remote machine using docker.

=== Parameters

- *registryUrl*: The url to the docker registry where the image is stored.
- *registryCredentialsId*: Credentials to publish/download images from registry.
- *buildReverseProxy*: If yes, it will build and publish a new version of reverse-proxy.
- *port*: Port of the MTS application. You must ensure that those port is available in the deployment machine.
- *dockerNetwork*: Network of your My Thai Star application. You can deploy several versions of MTS in the same server by changing the port and the dockerNetwork.
- *VERSION*: The version that you can to deploy.

=== Pipeline steps

- *Create docker network*: Create the docker network with the name provided as parameter.
- *Create the Docker image*: If buildReverseProxy is enabled, this step will create a new docker image and publish it to the docker registry.
- *Deploy new image*: Deploy a new reverse proxy container. If it already exists, first it delete the previous one.