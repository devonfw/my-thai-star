<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.devonfw.java.mtsj</groupId>
    <artifactId>mtsj</artifactId>
    <version>3.2.0-SNAPSHOT</version>
  </parent>
  <artifactId>mtsj-server</artifactId>
  <packaging>war</packaging>
  <name>${project.artifactId}</name>
  <description>Server for the mtsj application - a simple example using the Open Application Standard Platform for Java (devon4j).</description>

  <properties>
    <java.version>1.8</java.version>
    <server.war.name>mythaistar</server.war.name>
  </properties>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>mtsj-core</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <!-- REVIEW (JH): IMHO this is dead stuff that can be removed (AFAIK MTS frontend and backend are separate apps)
        otherwise should use frontend-maven-plugin -->
      <id>jsclient</id>
      <activation>
        <!--<activeByDefault>true</activeByDefault> -->
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>npm-install</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>npm</executable>
                  <arguments>
                    <argument>install</argument>
                  </arguments>
                  <workingDirectory>${js.client.dir}</workingDirectory>
                </configuration>
              </execution>
              <execution>
                <id>gulp-clean</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>gulp</executable>
                  <arguments>
                    <argument>clean</argument>
                  </arguments>
                  <workingDirectory>${js.client.dir}</workingDirectory>
                </configuration>
              </execution>
              <execution>
                <id>gulp-build</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>gulp</executable>
                  <arguments>
                    <argument>build:dist</argument>
                  </arguments>
                  <workingDirectory>${js.client.dir}</workingDirectory>
                </configuration>
              </execution>
              <execution>
                <id>gulp-test</id>
                <phase>test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>gulp</executable>
                  <arguments>
                    <argument>test</argument>
                  </arguments>
                  <workingDirectory>${js.client.dir}</workingDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <finalName>${server.war.name}</finalName>
    <resources>      <!-- Same as above - this is dead stuff that can be removed. -->
      <resource>
        <directory>${project.basedir}/src/main/resources</directory>
      </resource>
      <resource>
        <directory>${js.client.dir}/dist</directory>
        <targetPath>static</targetPath>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <mainClass>com.devonfw.application.mtsj.SpringBootApp</mainClass>
          <classifier>bootified</classifier>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>



</project>
