CREATE TABLE DateInfo(
  "DATE" DATE,
  TEMPERATURE DOUBLE,
  DESIGNATION VARCHAR(255)
);

CREATE VIEW DailyOrderedDishes AS SELECT
  "ORDERLINE".idDish AS "IDDISH",
  "BOOKING".bookingDate AS "BOOKINGDATE",
  CAST(SUM("ORDERLINE".amount) AS INTEGER) AS "AMOUNT"
FROM OrderLine AS "ORDERLINE"
JOIN Orders AS "ORDERS" ON "ORDERLINE".idOrder = "ORDERS".id
JOIN Booking AS "BOOKING" ON "BOOKING".id = "ORDERS".idBooking
GROUP BY "BOOKINGDATE", "IDDISH"
ORDER BY "BOOKINGDATE";

CREATE VIEW MonthlyOrderedDishes AS SELECT
  "ORDERLINE".idDish AS "IDDISH",
  CAST((YEAR("BOOKING".bookingDate) + '-' + MONTH("BOOKING".bookingDate) + '-01') AS TIMESTAMP) AS "BOOKINGDATE",
  ROUND(AVG("DATEINFO".TEMPERATURE),1) AS "TEMPERATURE",
  CAST(SUM("ORDERLINE".amount) AS INTEGER) AS "AMOUNT"
FROM OrderLine AS "ORDERLINE"
JOIN Orders AS "ORDERS" ON "ORDERLINE".idOrder = "ORDERS".id
JOIN Booking AS "BOOKING" ON "BOOKING".id = "ORDERS".idBooking
JOIN DateInfo AS "DATEINFO" ON CAST((YEAR("DATEINFO"."DATE") + '-' + MONTH("DATEINFO"."DATE") + '-01') AS TIMESTAMP) = CAST((YEAR("BOOKING".bookingDate) + '-' + MONTH("BOOKING".bookingDate) + '-01') AS TIMESTAMP)
GROUP BY CAST((YEAR("BOOKING".bookingDate) + '-' + MONTH("BOOKING".bookingDate) + '-01') AS TIMESTAMP), "IDDISH"
ORDER BY "BOOKINGDATE";

CREATE VIEW OrderedDishesPerDay AS SELECT
  CAST((CONVERT(VARCHAR(12),"DAILYORDEREDDISHES".bookingDate, 112) + "DAILYORDEREDDISHES".idDish) AS BIGINT) AS "ID",
  "DISH".modificationCounter,
  "DATEINFO".TEMPERATURE,
  "DATEINFO".DESIGNATION,
  "DAILYORDEREDDISHES".*
FROM DailyOrderedDishes AS "DAILYORDEREDDISHES"
JOIN Dish AS "DISH" ON "DAILYORDEREDDISHES".idDish = "DISH".id
JOIN DateInfo AS "DATEINFO" ON CONVERT(VARCHAR(12), "DATEINFO"."DATE", 112) = CONVERT(VARCHAR(12), "DAILYORDEREDDISHES".bookingDate, 112);

CREATE VIEW OrderedDishesPerMonth AS SELECT
  CAST((CONVERT(VARCHAR(12),"MONTHLYORDEREDDISHES".bookingDate, 112) + "MONTHLYORDEREDDISHES".idDish) AS BIGINT) AS "ID",
  "DISH".modificationCounter,
  "MONTHLYORDEREDDISHES".*
FROM MonthlyOrderedDishes AS "MONTHLYORDEREDDISHES"
JOIN Dish AS "DISH" ON "MONTHLYORDEREDDISHES".idDish = "DISH".id;

CREATE TABLE PREDICTION_ALL_FORECAST (
  id BIGINT NOT NULL AUTO_INCREMENT,
  modificationCounter INTEGER NOT NULL,
  idDish BIGINT NOT NULL,
  dishName VARCHAR(255),
  timestamp INTEGER,
  forecast DOUBLE,
  CONSTRAINT PK_PREDICTION_ALL_FORECAST PRIMARY KEY(id),
);

CREATE TABLE PREDICTION_ALL_MODELS (
  idDish BIGINT NOT NULL,
  "KEY" VARCHAR(100),
  "VALUE" VARCHAR(5000),
  CONSTRAINT PK_PREDICTION_ALL_MODELS PRIMARY KEY(idDish, "KEY")
);

CREATE TABLE PREDICTION_FORECAST_DATA (
  "TIMESTAMP" INTEGER,
  "TEMPERATURE" DOUBLE,
  "HOLIDAY" INTEGER,
  CONSTRAINT PK_PREDICTION_FORECAST_DATA PRIMARY KEY("TIMESTAMP")
);

