# This is the spring boot configuration file for development. It will not be included into the application.
# In order to set specific configurations in a regular installed environment create an according file
# config/application.properties in the server. If you are deploying the application to a servlet container as untouched
# WAR file you can locate this config folder in ${CATALINA_BASE}/lib. If you want to deploy multiple applications to
# the same container (not recommended by default) you need to ensure the WARs are extracted in webapps folder and locate
# the config folder inside the WEB-INF/classes folder of the webapplication.

#You can simply choose the DB of your choice by setting spring.profiles.active=XXX in this application.properties

server.port=8081
server.servlet.context-path=/mythaistar
client.port=4200

http.mappers.jsonPrettyPrint=true
security.basic.enabled=false

## Flyway for Database Setup and Migrations
spring.flyway.enabled=true
spring.flyway.clean-on-validation-error=true
spring.flyway.locations=classpath:db/migration,classpath:db/specific/h2

spring.profiles.active=${mts.database.profile}
## The following configs need to be set in config/application.properties on your specific environment
#spring.datasource.url=TODO
#spring.datasource.username=TODO
#spring.datasource.password=TODO

## The following can be enabled in case of any errors in the SQL to investigate the issue by looking at SQL
#spring.jpa.show-sql=true

mythaistar.hourslimitcancellation=1

##Mailing properties
#enabled set to false will use the MailMock service
spring.mail.enabled=true
spring.mail.host=de-nagios01.corp.capgemini.com
spring.mail.port=25
spring.mail.properties.mail.smtp.auth=false
spring.mail.properties.mail.smtp.starttls.enable=false

#CORS support
security.cors.spring.allowCredentials=true
security.cors.spring.allowedOriginPatterns=*
security.cors.spring.allowedHeaders=*
security.cors.spring.allowedMethods=OPTIONS,HEAD,GET,PUT,POST,DELETE,PATCH
security.cors.pathPattern=/**
